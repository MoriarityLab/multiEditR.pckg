devtools::install_github("MoriarityLab/multieditR")
devtools::install_github("MoriarityLab/multiEditR")
devtools::install_github("MoriarityLab/multieditR")
devtools::install_github("MoriarityLab/multieditR_Package")
devtools::install_github("MoriarityLab/multiEditR.pkg")
library(multiEditR.pkg)
devtools::install_github("MoriarityLab/multiEditR.pkg")
library(multiEditR.pkg)
library(multiEditR)
library(ggplot2)
library(ggplot2)
library(multiEditR)
library(ggplot2)
library(ggseqlogo)
library(multiEditR)
library(ggplot2)
library(ggseqlogo)
library(multiEditR)
library(multieditR)
library(multieditR)
library(ggseqlogo)
library(multieditR)
library(multiEditR)
load_parameters_file
load_parameters_file
load_parameters_file()
install.packages("MoriarityLab/multiEditR.pkg")
devtools::install_github("MoriarityLab/multiEditR.pkg")
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
library(multiEditR.pkg)
library(multiEditR)
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
library(ggplot2)
library(multiEditR)
library(ggplot2)
detach(ggseqlogo)
detach("ggseqlogo")
detach(ggplot2)
detach("ggplot2")
remove.packages("multiEditR")
library(multiEditR)
library(multiEditR.pkg)
library(MoriarityLab/multiEditR.pkg)
library(multiEditR.pkg)
library(multiEditR)
detach("package:ggseqlogo", unload=TRUE)
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
library(multiEditR)
multiEditR::ACGT
multiEditR::bases
params = load_example_params()
params = load_example_params()
params
head(params)
params = load_example_params()
library(multiEditR)
params = load_example_params()
load_example_params()
load_example_params
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
params = load_example_params()
params = load_example_params()
load_example_params()
load_example_params
devtools::install_github("MoriarityLab/multiEditR.pkg", force = TRUE)
library(multiEditR)
detach("multiEditR")
detach("multiEditR", force = T)
detach(name = "multiEditR", force = T)
detach("package:multiEditR", unload=TRUE)
library(multiEditR)
params = load_example_params()
head(params)
head(params)
save_batch_skeleton("./my_parameters.xlsx")
fits = detect_edits_batch(params)
data.tbl = get_batch_results_table(fits)
stats.tbl = get_batch_stats_table(fits)
fit1 = fits[[1]]
print(fit1$sample_name)
geom_chromatogram(fit1$sample_sanger,fit1$sample_locs[1], fit1$sample_locs[2])
create_multieditR_report(fits, params, "my_html_report.html")
create_multiEditR_report(fits, params, "my_html_report.html")
load_example_params()
create_multiEditR_report(fits, params, "my_html_report.html")
getwd()
load_example_params("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/kluesner_2021_batch.xlsx")
load_example_params
load_parameters_file("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/kluesner_2021_batch.xlsx")
params = load_parameters_file("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/kluesner_2021_batch.xlsx")
detect_edits_batch(params)
fits = detect_edits_batch(params)
create_multiEditR_report(fits, params, "my_html_report.html")
data.tbl = get_batch_results_table(fits)
fits = detect_edits_batch(params)
fits
fits
detect_edits_batch(params)
params
setwd("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/ab1_files")
setwd("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/ab1_files")
fits = detect_edits_batch(params)
data.tbl = get_batch_results_table(fits)
stats.tbl = get_batch_stats_table(fits)
create_multiEditR_report(fits, params, "my_html_report.html")
setwd("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/ab1_files")
fits = detect_edits_batch(params)
params = load_example_params
params
head(params)
params = load_example_params
params = load_parameters_file("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/kluesner_2021_batch.xlsx")
###
params = load_parameters_file("/Users/kluesner/Desktop/Research/GitHub/multiEditR.pckg/kluesner_2021_test_files/kluesner_2021_batch.xlsx")
params
fits = detect_edits_batch(params)
create_multiEditR_report(fits, params, "my_html_report.html")
fit1 = fits[[1]]
print(fit1$sample_name)
geom_chromatogram(fit1$sample_sanger,fit1$sample_locs[1], fit1$sample_locs[2])
print(fit1$sample_name)
fits
print(fit1$sample_name)
fits[[1]]
create_multiEditR_report(fits, params, "my_html_report.html")
params
create_multiEditR_report(fits, params, "my_html_report.html")
create_multiEditR_report
create_multiEditR_report(fits, params, "my_html_report.html")
devtools::install_github("MoriarityLab/multiEditR.pckg")
create_multiEditR_report(fits, params, "my_html_report.html")
remove.packages("multiEditR")
create_multiEditR_report(fits, params, "my_html_report.html")
devtools::install_github("MoriarityLab/multiEditR.pckg")
create_multiEditR_report(fits, params, "my_html_report.html")
fits
fits$sample_name
View(fits)
params = load_example_params
head(params)
save_batch_skeleton("./my_parameters.xlsx")
fits = detect_edits_batch(params)
params
fits
data.tbl = get_batch_results_table(fits)
library(multiEditR)
####
sample_file = system.file("extdata", "RP272_cdna_wt.ab1", package="multiEditR")
ctrl_file = system.file("extdata", "RP272_cdna_ko.ab1", package="multiEditR")
motif = "AGTAGCTGGGATTACAGATG"
edit = "G"
wt = "A"
edit = "G"
fit = detect_edits(
sample_file = sample_file,
ctrl_file = ctrl_file,
p_value = 0.0001,
phred_cutoff = 0.0001,
motif = motif,
wt = wt,
edit = edit
)
geom_chromatogram(fit$sample_sanger,fit$sample_locs[1], fit$sample_locs[2])
geom_chromatogram(fit$ctrl_sanger,fit$ctrl_locs[1], fit$ctrl_locs[2])
plot_raw_sample(fit)
plot_raw_sample(fit)
